// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Dumdum = require("./Dumdum.bs.js");
var Fetcher = require("./Fetcher.bs.js");
var Helpers = require("./Helpers.bs.js");
var Process = require("./Process.bs.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var PromiseMonad = require("bs-promise-monad/src/PromiseMonad.bs.js");
var Caml_splice_call = require("bs-platform/lib/js/caml_splice_call.js");

((require('isomorphic-fetch')));

function main(param) {
  console.time("timer");
  return PromiseMonad.$great$great$slash(PromiseMonad.$great$great$neg(PromiseMonad.$great$great$eq(PromiseMonad.$great$great$neg(Promise.all(Belt_Array.map(Belt_Array.keep("a\xc4\x85bc\xc4\x87de".split(""), (function (a) {
                                        return a.length > 0;
                                      })), (function (l) {
                                    return Fetcher.fetch_api(l.toLocaleUpperCase());
                                  }))), (function (htmls) {
                            var html = Caml_splice_call.spliceObjApply("", "concat", [htmls]);
                            return Helpers.partitions(Dumdum.id_of_api(html), 12);
                          })), (function (x) {
                        return Process.explode(Belt_Array.slice(x, 0, 20));
                      })), (function (param) {
                    console.timeEnd("timer");
                    return /* () */0;
                  })), (function (prim) {
                console.error(prim);
                return /* () */0;
              }));
}

main(/* () */0);

var partition_size = 12;

exports.partition_size = partition_size;
exports.main = main;
/*  Not a pure module */
